---
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import BaseLayout from '@/layouts/BaseLayout.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content } = await post.render()
---

<BaseLayout title={post.data.title}>
  <div class="flex justify-center px-4">
    <div class="w-full max-w-full py-32 md:max-w-2xl">
      <h1 class="pb-6 text-2xl font-bold md:text-3xl" transition:name={`post-${post.slug}`}>{post.data.title}</h1>
      <div class="flex space-x-2 text-xs tracking-wider text-muted-foreground md:text-sm">
        <p>
          <time datetime={post.data.publishedDate.toISOString()}>
            {
              post.data.publishedDate.toLocaleDateString('en-us', {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
              })
            }
          </time>
        </p>
        <span>&middot;</span>
        {post.data.tags.map((tag) => <a href={`/tags/${tag}`}>{`#${tag}`}</a>)}
      </div>

      <div class="relative mt-20">
        {post.data.image && <Image src={post.data.image} alt={post.data.title} format="avif" height={300} width={300} class="absolute inset-0 w-full object-cover object-center blur-xl" />}
        {post.data.image && <Image src={post.data.image} alt={post.data.title} format="avif" height={300} width={300} class="relative mt-20 w-full object-cover object-center" />}
      </div>

      <article class="prose prose-sm prose-foreground mt-20 max-w-none md:prose-base prose-code:text-xs md:prose-code:text-sm">
        <Content />
      </article>
    </div>
  </div>
</BaseLayout>

<style is:global>
  .footnotes {
    @apply mt-14 md:mt-24;
  }

  .footnotes ol li p {
    @apply m-0;
  }
</style>
